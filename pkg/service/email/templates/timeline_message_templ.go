// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.771
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"context"
	"encoding/base64"
	"fmt"
	"github.com/fivetentaylor/pointy/pkg/models"
	"html"
	"io"
	"strings"
)

func TimelineMessageStyles() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<style>\n    .msg-container {\n        margin-left: 6px;\n        text-align: left;\n        font-size: 18px;\n        font-family: Roboto, sans-serif;\n        font-weight: 400;\n        line-height: 28px;\n    }\n    .logo {\n        margin-bottom: 28px;\n    }\n    .header {\n        color: #18181B;\n        font-size: 24px;\n        font-weight: 700;\n        line-height: 28px;\n        word-wrap: break-word;\n        padding-bottom: 8px;\n        border-bottom: 1px solid #e1e1e1;\n        margin-bottom: 22px;\n    }\n    .title {\n        color: #18181B;\n        font-size: 16px;\n        font-weight: 500;\n        line-height: 28px;\n        word-wrap: break-word;\n        margin-top: 23px;\n        margin-bottom: 18px;\n    }\n    .avatar-container {\n        vertical-align: top;\n        width: 61px;\n    }\n    .avatar img {\n        width: 40px;\n        height: 40px;\n        border-radius: 9999px;\n    }\n    .avatar-initials {\n        width: 40px;\n        height: 40px;\n        border-radius: 9999px;\n        background: #18181B;\n        color: #F4F4F5;\n        line-height: 40px;\n        text-align: center;\n    }\n    .msg-title {\n        font-size: 14px;\n        margin-bottom: 5px;\n    }\n    .msg-date {\n        color: #71717A;\n        font-size: 14px;\n        font-weight: 500;\n        line-height: 28px;\n        word-wrap: break-word\n    }\n    .msg {\n        margin-bottom: 18px;\n    }\n    .msg-content {\n        color: #18181B;\n        font-size: 16px;\n        word-wrap: break-word\n    }\n    .msg-attachments {\n        margin-bottom: 16px;\n    }\n    .attachment {\n        margin-top: 8px;\n        border: 1px solid #e1e1e1;\n        border-radius: 6px;\n        padding: 14px 10px;\n    }\n    .view-more {\n        color: #6D28D9;\n        display: inline-block;\n    }\n    .attachment {\n        padding: 16px;\n    }\n    .attachment p {\n        font-size: 16px;\n    }\n    .attachment p:first-of-type {\n        display: inline;\n    }\n    .attachment h1, h2, h3, h4, h5, h6 {\n        margin-top: 0px;\n        margin-bottom: 16px;\n        font-size: 18px;\n    }\n\n    a {\n        color: #6D28D9;\n        text-decoration: none;\n    }\n    .button {\n        display: inline-block;\n        background: #6D28D9;\n        border-radius: 6px;\n        box-shadow: 0px 1px 3px rgba(16, 24, 40, 0.10);\n        font-size: 16px;\n        font-weight: 500;\n        gap: 8px;\n        letter-spacing: 0em;\n        line-height: 24px;\n        margin: auto;\n        overflow: hidden;\n        text-align: left;\n        text-decoration: none;\n    }\n    .button-text {\n        text-align: center;\n        padding-left: 16px;\n        padding-right: 16px;\n        padding-top: 8px;\n        padding-bottom: 8px;\n        color: #F4F4F5;\n        font-size: 16px;\n        font-family: Roboto, sans-serif;\n        font-weight: 500;\n        line-height: 24px;\n        word-wrap: break-word;\n    }\n    .username {\n        color: #6D28D9;\n        background: #E8E1FE;\n    }\n  </style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

type TimelineMessageData struct {
	Document    *models.Document
	Message     *models.TimelineMessageV1
	FromUser    *models.User
	Selection   string
	IsMentioned bool
}

func TimelineMessageHTML(preheader string, data *TimelineMessageData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var3 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<img class=\"logo\" src=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(appHostUrl(ctx, "/static/pointy.png"))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `service/email/templates/timeline_message.templ`, Line: 159, Col: 63}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" alt=\"Pointy\" style=\"width: 124px;\"><div class=\"msg-container\"><div class=\"header\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(data.FromUser.DisplayName)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `service/email/templates/timeline_message.templ`, Line: 162, Col: 31}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var6 string
			templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(timelineHeaderText(data))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `service/email/templates/timeline_message.templ`, Line: 162, Col: 60}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><div class=\"msg\"><table><tr><td class=\"avatar-container\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = Avatar(data.FromUser).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</td><td class=\"msg-content-container\"><div class=\"msg-title\"><strong>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var7 string
			templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(data.FromUser.Name)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `service/email/templates/timeline_message.templ`, Line: 173, Col: 29}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var8 string
			templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(timelineHeaderText(data))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `service/email/templates/timeline_message.templ`, Line: 173, Col: 58}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" <a href=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var9 templ.SafeURL = templ.SafeURL(TimelineEventUrl(ctx, data.Document.ID))
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(string(templ_7745c5c3_Var9)))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var10 string
			templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(data.Document.Title)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `service/email/templates/timeline_message.templ`, Line: 174, Col: 97}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</a></strong></div><div class=\"msg-content\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = TimelineMessagesContent(data.Message.Content).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if data.Selection != "" {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div style=\"width: 100%; height: 100%; border-radius: 8px; border: 1px #E4E4E7 solid; margin-bottom: 12px;\"><div style=\"color: #18181B; font-size: 16px; font-family: Roboto; font-weight: 400; line-height: 28px; word-wrap: break-word; margin: 13px 16px 10px 16px;\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templ.Raw(data.Selection).Render(ctx, templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"button-container\"><a class=\"button\" href=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var11 templ.SafeURL = templ.SafeURL(TimelineEventUrl(ctx, data.Document.ID))
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(string(templ_7745c5c3_Var11)))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"><div class=\"button-text\">Reply</div></a></div></td></tr></table></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = BaseEmail(preheader, TimelineMessageStyles()).Render(templ.WithChildren(ctx, templ_7745c5c3_Var3), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func timelineHeaderText(data *TimelineMessageData) string {
	if data.IsMentioned {
		return `mentioned you`
	} else {
		return `commented`
	}
}

func timelineTitleText(data *TimelineMessageData) string {
	if data.IsMentioned {
		return `mentioned you in`
	} else {
		return `commented on`
	}
}

func TimelineMessageText(data *TimelineMessageData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var12 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var12 == nil {
			templ_7745c5c3_Var12 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		var templ_7745c5c3_Var13 string
		templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinStringErrs(data.FromUser.Name)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `service/email/templates/timeline_message.templ`, Line: 217, Col: 21}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var14 string
		templ_7745c5c3_Var14, templ_7745c5c3_Err = templ.JoinStringErrs(timelineTitleText(data))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `service/email/templates/timeline_message.templ`, Line: 217, Col: 49}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var14))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var15 string
		templ_7745c5c3_Var15, templ_7745c5c3_Err = templ.JoinStringErrs(data.Document.Title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `service/email/templates/timeline_message.templ`, Line: 217, Col: 73}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var15))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" Click here to read it: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var16 string
		templ_7745c5c3_Var16, templ_7745c5c3_Err = templ.JoinStringErrs(TimelineEventUrl(ctx, data.Document.ID))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `service/email/templates/timeline_message.templ`, Line: 218, Col: 65}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var16))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func TimelineEventUrl(ctx context.Context, docId string) string {
	return appHostUrl(ctx, fmt.Sprintf("/drafts/%s?sb=t", docId))
}

func TimelineMessagesContent(content string) templ.Component {
	replaced := atMentionRegex.ReplaceAllStringFunc(content, func(match string) string {
		submatches := atMentionRegex.FindStringSubmatch(match)
		if len(submatches) > 1 {
			return fmt.Sprintf("<span class='username'>@%s</span>",
				html.EscapeString(submatches[1]),
			)
		}
		return match
	})

	replaced = atMentionRegexV2.ReplaceAllStringFunc(replaced, func(match string) string {
		submatches := atMentionRegexV2.FindStringSubmatch(match)
		if len(submatches) > 1 {
			decoded, err := base64.StdEncoding.DecodeString(submatches[1])
			if err != nil {
				fmt.Println("Error decoding string:", err)
				return match
			}

			parts := strings.Split(string(decoded), ":")
			if len(parts) != 4 {
				return match
			}

			return fmt.Sprintf("<span class='username'>@%s</span>",
				html.EscapeString(parts[3]),
			)
		}
		return match
	})

	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) error {
		_, err := w.Write([]byte(replaced))
		return err
	})
}

var _ = templruntime.GeneratedTemplate
