package auth

import (
	"github.com/fivetentaylor/pointy/pkg/server/auth/types"
	"github.com/fivetentaylor/pointy/pkg/views/ui"
)

templ Login(segmentKey, stateString string, state types.State) {
	@Layout(segmentKey) {
		<div id="login" class="mt-[10.5rem] max-sm:mt-0 px-8">
			<div class="mt-10 sm:mx-auto sm:w-full max-w-[27rem] max-sm:max-w-[24rem] max-sm:mx-auto">
				<div class="flex justify-center mb-6 pl-[0.375rem]">
					@ui.Logo()
				</div>
				<div class="text-center mb-7">
					<h1 class="text-2xl font-bold leading-[2.375rem]">Sign in</h1>
					<div class="mt-2 text-base">
						You&apos;re one of the first to elevate your writing
						with Reviso.
					</div>
				</div>
				@GoogleButton(stateString)
				<div class="flex items-center justify-center mt-6 mb-5">
					<div class="border-t border-border flex-grow mr-1"></div>
					<span class="text-muted-foreground px-1">OR</span>
					<div class="border-t border-border flex-grow ml-1"></div>
				</div>
				@LoginForm("", state, "")
				<div class="mt-5 text-center text-xs text-muted-foreground leading-4">
					By continuing, you agree to Revisoâ€™s{ " " }
					<a href="https://www.revi.so/legal/terms-of-service" class="underline">
						{ " " }
						Terms of Service
					</a>{ " " }
					and{ " " }
					<a href="https://www.revi.so/legal/privacy" class="underline">
						Privacy Policy
					</a>
					.
				</div>
			</div>
		</div>
	}
}

templ AuthFailure(segmentKey, failure string) {
	@Layout(segmentKey) {
		<div class="w-screen h-screen flex flex-col pt-4 px-9">
			<nav class="flex items-center">
				<div class="flex-1">
					<a href="/">
						@ui.Logo()
					</a>
				</div>
			</nav>
			<div class="flex justify-center items-center h-screen text-center">
				<div class="flex flex-col items-center w-screen">
					<img alt="open envelope" loading="lazy" width="120" height="140" decoding="async" data-nimg="1" class="block dark:hidden" src="/static/errorLight.svg" style="color: transparent;"/>
					<img alt="open envelope" loading="lazy" width="120" height="140" decoding="async" data-nimg="1" class="hidden dark:block" src="/static/errorDark.svg" style="color: transparent;"/>
					<h1 class="mt-4 text-4xl font-bold leading-[3rem] text-foreground">
						Something went wrong
					</h1>
					<p class="mt-4">
						{ failure }
					</p>
					@ui.Button(ui.ButtonOptions{
						Variant: "reviso",
						Class:   "mt-5 bg-secondary hover:bg-secondary/90 text-secondary-foreground",
						Href:    "/login",
					}) {
						Back to Login
					}
				</div>
			</div>
		</div>
	}
}

templ GoogleButton(state string) {
	<a
		id="GoogleLoginButton"
		class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 shadow-sm h-10 px-4 py-2 w-full bg-secondary hover:bg-secondary/90 text-secondary-foreground"
		href={ templ.SafeURL("/auth/google?state=" + state) }
	>
		@GoogleIcon()
		Continue with Google
	</a>
	<script>
	var button = document.getElementById('GoogleLoginButton');
	button.addEventListener('click', function () {
		analytics.track('SIGNIN_GOOGLE');

		button.style.opacity = '0.5'; 
		button.style.pointerEvents = 'none'; 
	});
	</script>
}

templ LoginForm(email string, state types.State, emailError string) {
	<form
		id="loginForm"
		hx-post="/auth/magic_link"
		hx-target="#login"
		hx-swap="outerHTML"
		hx-indicator="#loading"
	>
		<div class="space-y-7">
			<div class="space-y-1">
				<label for="email" class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70">
					Email
				</label>
				@ui.Input("email", ui.InputOptions{
					Attrs: templ.Attributes{
						"placeholder": "Email",
						"id":          "email",
						"name":        "email",
						"value":       email,
					},
				})
				<div class="text-red-500">{ emailError }</div>
				<input type="hidden" name="next" value={ state.Next }/>
				<input type="hidden" name="sb" value={ state.Sidebar }/>
			</div>
			<div id="loading" class="hidden">
				Loading...
			</div>
			@ui.Button(ui.ButtonOptions{
				Variant: "reviso",
				Class:   "w-full",
				Attrs:   templ.Attributes{"type": "submit"},
			}) {
				Send Magic Link
			}
		</div>
	</form>
	<script>
  var form = document.getElementById('loginForm');
  form.addEventListener('htmx:beforeRequest', function () {
    form.style.opacity = '0.5'; 
    form.style.pointerEvents = 'none'; 
  });

  form.addEventListener('htmx:afterRequest', function () {
    form.style.opacity = ''; 
    form.style.pointerEvents = ''; 
    analytics.track('SIGNIN_EMAIL', { email: form.email.value });
  });
</script>
}

templ GoogleIcon() {
	<svg stroke="currentColor" fill="currentColor" stroke-width="0" version="1.1" x="0px" y="0px" viewBox="0 0 48 48" enable-background="new 0 0 48 48" class="w-5 h-5 mr-2" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg">
		<path
			fill="#FFC107"
			d="M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12
	c0-6.627,5.373-12,12-12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24
	c0,11.045,8.955,20,20,20c11.045,0,20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z"
		></path><path
	fill="#FF3D00"
	d="M6.306,14.691l6.571,4.819C14.655,15.108,18.961,12,24,12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657
	C34.046,6.053,29.268,4,24,4C16.318,4,9.656,8.337,6.306,14.691z"
></path><path
	fill="#4CAF50"
	d="M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-5.238C29.211,35.091,26.715,36,24,36
	c-5.202,0-9.619-3.317-11.283-7.946l-6.522,5.025C9.505,39.556,16.227,44,24,44z"
></path><path
	fill="#1976D2"
	d="M43.611,20.083H42V20H24v8h11.303c-0.792,2.237-2.231,4.166-4.087,5.571
	c0.001-0.001,0.002-0.001,0.003-0.002l6.19,5.238C36.971,39.205,44,34,44,24C44,22.659,43.862,21.35,43.611,20.083z"
></path>
	</svg>
}
